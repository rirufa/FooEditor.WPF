<?xml version="1.0" encoding="UTF-8"?>
<sytaxdefinition foldingmethod="clang">
	<singlelinecomment>
		<item>//</item>
	</singlelinecomment>
	<mutilinecommentstart>
		<item>/*</item>
	</mutilinecommentstart>
	<mutilinecommentend>
		<item>*/</item>
	</mutilinecommentend>
	<lineend>;</lineend>
	<literals>
		<item>"</item>
	</literals>
	<operators>
		<item>+</item>
		<item>-</item>
		<item>*</item>
		<item>/</item>
		<item>=</item>
		<item>!</item>
		<item>~</item>
		<item>(</item>
		<item>)</item>
		<item>,</item>
		<item>.</item>
		<item>[</item>
		<item>]</item>
    <item>;</item>
    <item>&lt;</item>
    <item>&gt;</item>
  </operators>
	<keywords>
    <item>abstract</item>
    <item>as</item>
    <item>base</item>
    <item>bool</item>
    <item>byte</item>
    <item>char</item>
    <item>checked</item>
    <item>class</item>
    <item>const</item>
    <item>decimal</item>
    <item>delegate</item>
    <item>double</item>
    <item>enum</item>
    <item>event</item>
    <item>explicit</item>
    <item>extern</item>
    <item>false</item>
    <item>fixed</item>
    <item>float</item>
    <item>get</item>
    <item>implicit</item>
    <item>in</item>
    <item>int</item>
    <item>interface</item>
    <item>internal</item>
    <item>is</item>
    <item>lock</item>
    <item>long</item>
    <item>namespace</item>
    <item>new</item>
    <item>null</item>
    <item>object</item>
    <item>operator</item>
    <item>out</item>
    <item>override</item>
    <item>params</item>
    <item>partial</item>
    <item>private</item>
    <item>protected</item>
    <item>public</item>
    <item>readonly</item>
    <item>ref</item>
    <item>sbyte</item>
    <item>sealed</item>
    <item>set</item>
    <item>short</item>
    <item>sizeof</item>
    <item>stackalloc</item>
    <item>static</item>
    <item>string</item>
    <item>struct</item>
    <item>this</item>
    <item>true</item>
    <item>typeof</item>
    <item>uint</item>
    <item>ulong</item>
    <item>unchecked</item>
    <item>unsafe</item>
    <item>ushort</item>
    <item>using</item>
    <item>value</item>
    <item>virtual</item>
    <item>void</item>
    <item>volatile</item>
    <item>where</item>
    <item>break</item>
    <item>case</item>
    <item>catch</item>
    <item>continue</item>
    <item>default</item>
    <item>do</item>
    <item>else</item>
    <item>finally</item>
    <item>for</item>
    <item>foreach</item>
    <item>goto</item>
    <item>if</item>
    <item>return</item>
    <item>switch</item>
    <item>throw</item>
    <item>try</item>
    <item>while</item>
    <item>yield</item>
    <item>#region</item>
    <item>#define</item>
    <item>#else</item>
    <item>#elif</item>
    <item>#endif</item>
    <item>#endregion</item>
    <item>#error</item>
    <item>#if</item>
    <item>#line</item>
    <item>#pragma</item>
    <item>#undef</item>
    <item>#warning</item>
  </keywords>
	<intendstart>
		<item>{</item>
	</intendstart>
	<intendend>
		<item>}</item>
	</intendend>
	<foldingbegin>namespace\s[a-z]+</foldingbegin>
	<foldingend>}</foldingend>
	<foldingbegin>(class|struct)\s[a-z]+</foldingbegin>
	<foldingend>}</foldingend>
	<foldingbegin>[a-z0-9]+\s.+\(.*\)$</foldingbegin>
	<foldingend>}</foldingend>
</sytaxdefinition>

