<?xml version="1.0" encoding="UTF-8"?>
<sytaxdefinition foldingmethod="clang">
	<singlelinecomment>
		<item>//</item>
	</singlelinecomment>
	<mutilinecommentstart>
		<item>/*</item>
	</mutilinecommentstart>
	<mutilinecommentend>
		<item>*/</item>
	</mutilinecommentend>
	<lineend>;</lineend>
	<literals>
		<item>"</item>
    <item>`</item>
  </literals>
	<operators>
		<item>+</item>
		<item>-</item>
		<item>*</item>
		<item>/</item>
		<item>=</item>
		<item>!</item>
		<item>~</item>
		<item>(</item>
		<item>)</item>
		<item>,</item>
		<item>.</item>
		<item>[</item>
		<item>]</item>
    <item>;</item>
    <item>{</item>
    <item>}</item>
  </operators>
	<keywords>
    <item>async</item>
    <item>await</item>
    <item>break</item>
    <item>case</item>
    <item>catch</item>
    <item>continue</item>
    <item>debugger</item>
    <item>default</item>
    <item>delete</item>
    <item>do</item>
    <item>else</item>
    <item>finally</item>
    <item>for</item>
    <item>function</item>
    <item>if</item>
    <item>in</item>
    <item>instanceof</item>
    <item>new</item>
    <item>return</item>
    <item>switch</item>
    <item>this</item>
    <item>throw</item>
    <item>try</item>
    <item>typeof</item>
    <item>var</item>
    <item>void</item>
    <item>while</item>
    <item>with</item>
    <item>class</item>
    <item>enum</item>
    <item>export</item>
    <item>extends</item>
    <item>import</item>
    <item>super</item>
    <item>implements</item>
    <item>interface</item>
    <item>let</item>
    <item>package</item>
    <item>private</item>
    <item>protected</item>
    <item>public</item>
    <item>static</item>
    <item>null</item>
    <item>true</item>
    <item>false</item>
  </keywords>
	<intendstart>
		<item>{</item>
	</intendstart>
	<intendend>
		<item>}</item>
	</intendend>
	<foldingbegin>(function)\s[a-z_]+(\().*(\))</foldingbegin>
	<foldingend>}</foldingend>
</sytaxdefinition>

